name: Build And Push Docker Image

on: workflow_dispatch

env:
  IMAGE_NAME: bluexiii/docker-easyconnect

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker-build() {
            #docker pull $1
            docker build -t $1 --build-arg BUILD_ENV=actions "${@:2}"
          }
          pirefix=""
          latest_name="latest"
          if [ "$(git branch --show-current)" = develop ]; then prefix=dev- ; latest_name=dev ; fi

          docker-build fake-hwaddr -f Dockerfile.fake-hwaddr .

          docker-build ${{ env.IMAGE_NAME }}:${prefix}cli -f Dockerfile.cli .

          docker-build ${{ env.IMAGE_NAME }}:${prefix}7.6.3 --build-arg EC_URL=$(cat ec_urls/7.6.3.txt) -f Dockerfile .
          docker-build ${{ env.IMAGE_NAME }}:${prefix}7.6.7 --build-arg EC_URL=$(cat ec_urls/7.6.7.txt) -f Dockerfile .

          docker-build ${{ env.IMAGE_NAME }}:${prefix}vncless-7.6.3 --build-arg EC_URL=$(cat ec_urls/7.6.3.txt) -f Dockerfile.vncless .
          docker-build ${{ env.IMAGE_NAME }}:${prefix}vncless-7.6.7 --build-arg EC_URL=$(cat ec_urls/7.6.7.txt) -f Dockerfile.vncless .

          docker tag ${{ env.IMAGE_NAME }}:${prefix}7.6.3 ${{ env.IMAGE_NAME }}:${latest_name}

      - name: Push Docker image
        run: |
          docker push --all-tags ${{ env.IMAGE_NAME }}
